apply plugin: 'com.android.application'

def aria2Version = '1.19.0'
def ownVersion = '0.9.1'

Properties props = new Properties()
File propFile
if((propFile = file("$rootProject.projectDir/private.properties")).exists()) {
    new FileInputStream(propFile).withStream { InputStream is ->
        props.load(is)
    }
}



android {
    compileSdkVersion 21
    buildToolsVersion '21.1.2'

    signingConfigs {
        release {
            storeFile file(props['storeFile'])
            keyAlias props['keyAlias']

            storePassword props['storePassword']
            keyPassword props['keyPassword']
        }
    }

    defaultConfig {
        applicationId 'net.sf.aria2'
        minSdkVersion 9
        targetSdkVersion 22
        versionCode 16 // bump by 3 per release
        versionName "$ownVersion+u.$aria2Version"
    }
    splits {
        abi {
            enable true
            reset()
            include 'x86', 'armeabi-v7a', 'mips'
            universalApk true
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles 'proguard-common.pro', 'proguard-obfuscate.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

apply plugin: 'me.tatarka.retrolambda'

dependencies {
    retrolambdaConfig 'net.orfjackal.retrolambda:retrolambda:1.8.0'

    // wait until https://github.com/square/leakcanary/issues/156 is resolved
    //debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'

    compile project(':libtermexec')
    compile 'com.android.support:appcompat-v7:22.1.1'
    compile 'org.jraf:android-switch-backport:1.4.0'
    compile 'com.android.support:support-v4:22.0.3'
    compile 'com.afollestad:material-dialogs:0.7.4.2'
}

apply from: file("$projectDir/prepare-natives.gradle")

ext.versionCodes = ['armeabi': 0, 'armeabi-v7a': 1, 'x86': 2, 'mips': 3]

import com.android.build.OutputFile

android.applicationVariants.all { variant ->
    // assign different version code for each output
    variant.outputs.each { output ->
        def verAdd = project.versionCodes.get(output.getFilter(OutputFile.ABI))

        if (verAdd)
            output.versionCodeOverride = android.defaultConfig.versionCode + verAdd
    }
}
